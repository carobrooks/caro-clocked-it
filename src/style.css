html {
  /* Enables vertical scrolling if necessary */
  scroll-snap-type: y mandatory;
  /* Put margin color here */
}

body {
  max-width: 1440px;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  padding: 0;
  overflow-x: hidden;
  overflow-y: scroll;
  position: relative;
}

#landing-page,
#introduction,
#travel-back,
#be-here-now,
#imagine-the-future,
footer {
  scroll-snap-align: start;
  min-height: 100vh;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 0;
  overflow: hidden;
}

#landing-page {
  background-color: #fffcf3;
}

#introduction {
  background-color: rgba(255, 210, 145, 0.45);
}

#travel-back {
  background-color: #fffcf3;
}

#be-here-now {
  background-color: rgba(176, 85, 75, 0.25);
}
#imagine-the-future {
  background-color: #fffcf3;
}

.lp-svg-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

.world-clock-text-container {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  padding-top: 5rem;
}

.world-clock-text {
  text-align: center;
  font-family: "Quattrocento", "Sans Serif";
  color: #fffcf3;
  font-weight: 400;
}

.world-clock-text > h1 {
  line-height: 0;
}

.reimagined-text {
  text-align: center;
  font-family: "Quattrocento", "Sans Serif";
  color: #ffd291;
  font-weight: 400;
  padding-left: 8rem;
}

.reimagined-text > h1 {
  margin-top: 8px;
}

.landing-thick-squiggle {
  position: absolute;
  top: -146px;
  right: 0px;
}

.landing-thin-squiggle {
  position: absolute;
  top: -10px;
  right: 0px;
}

.landing-page-gray-squiggle {
  position: absolute;
  top: -10px;
  right: 45px;
}

/* This is the default size, which applies when none of the media queries match */

.take-your-time img {
  /* Parameters to interpolation function. Change this as needed. */
  --from: 300;
  --to: 600;
  --fromWidth: 500;
  --toWidth: 1200;

  /* Implementation. Don't change this. Result is in the --between variable. */
  --delta: calc(var(--to) - var(--from));
  --deltaWidth: calc(var(--toWidth) - var(--fromWidth));
  --minScreenWidth: calc(var(--fromWidth)) * 1px;
  --maxScreenWidth: calc(var(--toWidth) * 1px);
  --rangeWidth: clamp(var(--minScreenWidth), 100vw, var(--maxScreenWidth));
  --slope: calc(var(--delta) / var(--deltaWidth));
  --base: calc((var(--from) - var(--slope) * var(--fromWidth)) * 1px);
  --between: calc(var(--base) + (var(--rangeWidth) * var(--slope)));

  width: var(--between);
  height: auto;
}

/*
  This is the template for the interpolation function that we worked very hard on.
  It's just here for reference. Copy it as needed, and change the first four variables
  to achieve the desired effect.

  If you need to transform in both X and Y dimensions... you'll need to rewrite this
  to accomodate both.
*/
.between-template {
  /* Parameters to interpolation function. Change this as needed. */
  --from: 0;
  --to: 240;
  --fromWidth: 600;
  --toWidth: 1200;

  /* Implementation. Don't change this. Result is in the --between variable. */
  --delta: calc(var(--to) - var(--from));
  --deltaWidth: calc(var(--toWidth) - var(--fromWidth));
  --minScreenWidth: calc(var(--fromWidth)) * 1px;
  --maxScreenWidth: calc(var(--toWidth) * 1px);
  --rangeWidth: clamp(var(--minScreenWidth), 100vw, var(--maxScreenWidth));
  --slope: calc(var(--delta) / var(--deltaWidth));
  --base: calc((var(--from) - var(--slope) * var(--fromWidth)) * 1px);
  --between: calc(var(--base) + (var(--rangeWidth) * var(--slope)));

  transform: translateX(var(--between));
}

/*
  This is the template for the two-dimensional interpolation function.
  
  Change the first eight variables as needed.
*/
.between-template-xy {
  /* Parameters to interpolation function. Change this as needed. */
  --fromX: 0;
  --toX: 240;
  --fromWidthX: 600;
  --toWidthX: 1200;

  --fromY: 0;
  --toY: 80;
  --fromWidthY: 600;
  --toWidthY: 1200;

  /* Implementation. Don't change this. Result is in the --between variable. */
  --deltaX: calc(var(--toX) - var(--fromX));
  --deltaWidthX: calc(var(--toWidthX) - var(--fromWidthX));
  --minScreenWidthX: calc(var(--fromWidthX)) * 1px;
  --maxScreenWidthX: calc(var(--toWidthX) * 1px);
  --rangeWidthX: clamp(var(--minScreenWidthX), 100vw, var(--maxScreenWidthX));
  --slopeX: calc(var(--deltaX) / var(--deltaWidthX));
  --baseX: calc((var(--fromX) - var(--slopeX) * var(--fromWidthX)) * 1px);
  --betweenX: calc(var(--baseX) + (var(--rangeWidthX) * var(--slopeX)));

  --deltaY: calc(var(--toY) - var(--fromY));
  --deltaWidthY: calc(var(--toWidthY) - var(--fromWidthY));
  --minScreenWidthY: calc(var(--fromWidthY)) * 1px;
  --maxScreenWidthY: calc(var(--toWidthY) * 1px);
  --rangeWidthY: clamp(var(--minScreenWidthY), 100vw, var(--maxScreenWidthY));
  --slopeY: calc(var(--deltaY) / var(--deltaWidthY));
  --baseY: calc((var(--fromY) - var(--slopeY) * var(--fromWidthY)) * 1px);
  --betweenY: calc(var(--baseY) + (var(--rangeWidthY) * var(--slopeY)));

  transform: translateX(var(--betweenX)) translateY(var(--betweenY));
}

.take-your-time-xy {
  /* Parameters to interpolation function. Change this as needed. */
  --fromX: 0;
  --toX: 300;
  --fromWidthX: 600;
  --toWidthX: 1400;

  --fromY: 0;
  --toY: 60;
  --fromWidthY: 600;
  --toWidthY: 1400;

  /* Implementation. Don't change this. Result is in the --between variable. */
  --deltaX: calc(var(--toX) - var(--fromX));
  --deltaWidthX: calc(var(--toWidthX) - var(--fromWidthX));
  --minScreenWidthX: calc(var(--fromWidthX)) * 1px;
  --maxScreenWidthX: calc(var(--toWidthX) * 1px);
  --rangeWidthX: clamp(var(--minScreenWidthX), 100vw, var(--maxScreenWidthX));
  --slopeX: calc(var(--deltaX) / var(--deltaWidthX));
  --baseX: calc((var(--fromX) - var(--slopeX) * var(--fromWidthX)) * 1px);
  --betweenX: calc(var(--baseX) + (var(--rangeWidthX) * var(--slopeX)));

  --deltaY: calc(var(--toY) - var(--fromY));
  --deltaWidthY: calc(var(--toWidthY) - var(--fromWidthY));
  --minScreenWidthY: calc(var(--fromWidthY)) * 1px;
  --maxScreenWidthY: calc(var(--toWidthY) * 1px);
  --rangeWidthY: clamp(var(--minScreenWidthY), 100vw, var(--maxScreenWidthY));
  --slopeY: calc(var(--deltaY) / var(--deltaWidthY));
  --baseY: calc((var(--fromY) - var(--slopeY) * var(--fromWidthY)) * 1px);
  --betweenY: calc(var(--baseY) + (var(--rangeWidthY) * var(--slopeY)));

  transform: translateX(var(--betweenX)) translateY(var(--betweenY));
}

@media (min-width: 740px) {
  .landing-thin-squiggle {
    position: absolute;
    right: -20vw;
    top: -20vh;
  }
}
@media (min-width: 740px) {
  .landing-thin-squiggle img {
    width: 141vw;
    height: auto;
  }
}

.intro-svg-container {
  width: 100%;
  height: 100%;
  margin-top: 100px;
  position: absolute;
  overflow: hidden;
}
.intro-thin-squiggle {
  top: -60px;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  min-width: 100%;
}

.intro-text-container {
  max-width: 90%;
  font-family: "Quattrocento";
  font-size: 1.25rem;
  background-color: rgba(255, 252, 243, 0.72);
  text-align: center;
  padding: 30px;
  border-radius: 25px;
  /* overflow: auto; */
  z-index: 1;
  margin: 30px 0 30px 0;
}
/* -------------------------------------------------- */

.past-svg-container {
  width: 100%;
  height: 100%;
  margin-top: 100px;
  position: absolute;
}
.travel-back-svg {
  left: 50%;
  position: relative;
  transform: translateX(-50%);
  width: 90%;
  max-width: 700px;
}

.past-thick-squiggle {
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  max-width: 100%;
}
.past-time-prompt-container,
.present-time-prompt-container,
.future-time-prompt-container {
  display: flex;
  flex-direction: column;
  gap: 60px;
  margin-top: 80px;
  align-items: center;
  max-width: 90%;
  font-family: "Quattrocento";
  font-size: 1.5rem;
  font-weight: 400;
  text-align: center;
  z-index: 1;
}

.past-time-prompt-container {
  color: #b0554b;
}

.past-time-container,
.present-time-container,
.future-time-container {
  font-weight: 700;
}
/* .past-prompt-container {
  max-width: 90%;
  font-family: "Quattrocento";
  font-size: 1.5rem;
  font-weight: 400;
  color: #b0554b;
  text-align: center;
  z-index: 1;
} */

.past-text-container {
  max-width: 90%;
  font-family: "Quattrocento";
  font-size: 1.5rem;
  font-weight: 400;
  color: #b0554b;
  text-align: center;
  z-index: 1;
  margin: 185px 0 30px 0;
}

.present-svg-container {
  width: 100%;
  height: 100%;
  margin-top: 100px;
  position: absolute;
}
.present-thin-squiggle {
  top: -60px;
  left: 55%;
  transform: translateX(-50%);
  position: absolute;
  max-width: 100%;
}

.be-here-now-svg {
  left: 50%;
  position: relative;
  transform: translateX(-50%);
  width: 95%;
  max-width: 700px;
}

.present-time-prompt-container {
  color: #fffcf3;
}

.present-text-container {
  color: #fffcf3;
  font-family: "Quattrocento";
  font-size: 1.5rem;
  margin: 150px 0 30px 0;
  font-weight: 400;
  text-align: center;
  z-index: 1;
  max-width: 90%;
}

#present-text:hover,
#past-text:hover,
#future-text:hover {
  cursor: pointer;
}

.future-svg-container {
  width: 100%;
  height: 100%;
  margin-top: 100px;
  position: absolute;
  z-index: 0;
}

.future-thick-squiggle {
  top: 50px;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  max-width: 105%;
  background-color: #fffcf3;
}

.imagine-the-future-svg {
  position: relative;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 90%;
  max-width: 700px;
}

.future-time-prompt-container {
  color: #000;
}

@media screen and (max-width: 912px) and (orientation: landscape) {
  .past-time-prompt-container,
  .present-time-prompt-container,
  .future-time-prompt-container {
    gap: 40px;
    margin-top: 250px;
    margin-bottom: 60px;
  }
}

.future-text-container {
  color: #000;
  max-width: 90%;
  margin: 200px 0 0 0;
  font-family: "Quattrocento";
  font-size: 1.5rem;
  font-weight: 400;
  text-align: center;
  z-index: 1;
}

@media screen and (max-width: 912px) and (orientation: landscape) {
  .past-text-container,
  .future-text-container {
    margin: 260px 0 30px 0;
  }
}

#past-click-me,
#present-click-me,
#future-click-me {
  text-decoration: underline;
}

footer,
.the-actual-time {
  display: flex;
  flex-direction: column;
  justify-content: center;
  font-family: "Dosis", "Sans Serif";
  background-color: #fffcf3;
  color: #000;
  text-align: center;
  position: relative;
  z-index: 1;
}

.the-actual-time {
  color: #000;
  max-width: 90%;
  margin: 235px 0 0 0;
  font-family: "Quattrocento";
  font-size: 1.5rem;
  font-weight: 400;
  text-align: center;
}

#actual-time {
  font-size: 5rem;
  font-weight: 400;
  font-family: "Roboto Mono";
}

#actual-past-time,
#actual-present-time,
#actual-future-time {
  font-family: "Roboto Mono";
  padding: 5px;
  font-size: 24px;
}

@media screen and (max-width: 540px) {
  #actual-time {
    font-size: 3rem;
  }
}

.dropdown {
  width: 330px;
  height: 30px;
  font-size: 18px;
  border: 2px solid #000;
  color: #000;
  border-radius: 4px;
}

.real-footer {
  margin: 350px 0 0 0;
  font-size: 22px;
}

.github-link {
  color: inherit;
}

.caro {
  font-family: "Rampart One", "Sans Serif";
  color: #b0554b;
  font-size: 28px;
}
